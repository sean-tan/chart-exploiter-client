let allSongs = [];
let filteredSongs = [];
let numOfDays;
let currentGenre;
let searchParam;
let musicSource = 'beatport';

function fetchData(searchParam){
    setMusicSource();
    showSpinner(true);
    axios.get(`https://beatportcharts-server.remix.es/${musicSource}/${searchParam}`)
        .then(function(response){
            for(let i = 0; i < response.data.length; i++){
                allSongs.push(response.data[i])
            }
            if(musicSource === 'traxsource'){
                // List header is the first object on the list
                allSongs.shift();
            }
        })
        .catch(function (error){
            alert(error)
        })
        .then(function () {
            // Always executed
            showSpinner(false);
            getNumOfDays();
            createTable(filterOnDate(numOfDays));
            handleTableItemClick();
        });
}

$('.dropdown-menu a').click(function ()  {
    resetSearch();
    searchParam = ($(this).attr('data-search'));
    currentGenre = ($(this).text());

    fetchData(searchParam);
});

function setMusicSource(){
    // Beatport, Traxsouce etc.
    $('.dropdown-toggle').click(function () {
        musicSource = $(this).text().trim().toLowerCase();
    });
}

$('#days-select-box').on('change', function () {
    if(searchParam){
        resetSearch();
        fetchData(searchParam);
    }
});

function resetSearch() {
    allSongs.length = 0;
    filteredSongs.length = 0;
    $('.empty-list').hide();
    $('.jumbotron').hide();
    $('table').remove();
}

function getNumOfDays() {
    numOfDays = $('#days-select-box').val();
}

function showSpinner(show) {
    if(show){
        $('.spinner-border').show();
    } else {
        $('.spinner-border').hide();
    }
}

function createTable() {
    // If there aren't any songs to display
    if(filteredSongs.length === 0) {
        $('.empty-list').show();
        return null;
    } else {
        $('.empty-list').hide();
        document.querySelector('#data-list').classList.add('jumbotron');
        $('.jumbotron').show();

        /* Table creation written in vanilla JS for speed enhancements */

        // table headings
        let columnHeadings = Object.keys(allSongs[0]);

        // Get the count of columns.
        let columnCount = columnHeadings.length;

        // The count of rows.
        let rowCount = filteredSongs.length;

        // create table
        const table = document.createElement('table');
        table.classList.add('table', 'table-bordered', 'table-hover');
        document.getElementById('data-list').appendChild(table);

        // Create caption elements
        const caption = document.createElement('caption');
        const img = document.createElement('img');
        img.classList.add('caption-image');
        if(musicSource  === 'beatport'){
            img.src = 'img/bp_logo.png';
        } else if(musicSource === 'traxsource'){
            img.src = 'img/ts_logo.png';
        }
        const captionHeading = document.createElement('h3');
        captionHeading.classList.add('caption-heading');

        // Set caption elements
        document.querySelector('table').appendChild(caption);
        caption.appendChild(img);
        caption.appendChild(captionHeading);

        captionHeading.innerText = currentGenre;


        // add the header row
        const header = table.createTHead();
        header.classList.add('thead-dark');
        let row = header.insertRow();
        for(let i = 0; i < columnCount; i++){
            let headerCell = document.createElement('th');
            headerCell.innerText = columnHeadings[i].toUpperCase();
            row.appendChild(headerCell);
        }
        // Replace 'num' with '#' in table head
        $('thead th').first().html('#');

        // create table body
        let tBody = document.createElement('tbody');
        table.appendChild(tBody);

        // add the data rows to the table body
        for(let i = 0; i < rowCount; i++){
            row = tBody.insertRow();
            for(let j = 0; j < columnCount; j++){
                let cell = row.insertCell();
                cell.classList.add(columnHeadings[j]);
                let song = filteredSongs[i];
                cell.innerText = song[columnHeadings[j]];
            }
        }
    }
}

function handleTableItemClick(){
    // Remove BR tags to avoid excessive whitespace
    $('.artists br').remove();

    $('tbody tr').click(function () {
        let artist = ($(this).find('.artists').text());
        let title = ($(this).find('.title').text());
        youtubeSearch(artist, title);
    });
}
function youtubeSearch(artist, title) {
    // Regex remove whitespace
    artist = artist.replace(/\s\s+/g, ' ');
    title = title.replace(/\s\s+/g, ' ');
    window.open(`https://www.youtube.com/results?search_query=${artist + ' ' + title}`);
}

function filterOnDate(days) {

        for(let i = 0; i < allSongs.length; i++){
            let releaseDate = new Date(allSongs[i].released);
            if((setDaysAgo(days) <= releaseDate)){
                if(releaseDate <= new Date()){
                    filteredSongs.push(allSongs[i]);
                }
            }
    }
}

function setDaysAgo(days) {
    let numOfDays = days;
    let today = new Date();

    // Subtract now from numofdays param
    return today.setDate(today.getDate() - numOfDays);
}

// Default behaviour when entering site (Beatport top100 / 7 days)
$('.dropdown-item').first().click();




